generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int        @id @default(autoincrement())
  id_permission Int
  first_name    String     @db.VarChar(128)
  last_name     String     @db.VarChar(128)
  email         String     @unique @db.VarChar(256)
  phone_number  String?    @db.VarChar(16)
  password      String     @db.VarChar(128)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @default(now()) @updatedAt
  deletedAt     DateTime?  @db.Timestamp
  permission    Permission @relation(fields: [id_permission], references: [id])
  orders        Order[]

  @@index([id_permission])
}

model Permission {
  id        Int       @id @default(autoincrement())
  name      String    @unique @db.VarChar(128)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  deletedAt DateTime? @db.Timestamp
  users     User[]
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(100)
  description String    @db.Text
  value       Decimal   @db.Decimal
  stock       Int       @db.Integer
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
  deletedAt   DateTime? @db.Timestamp

  orderInfos OrderInfo[]
}

model PaymentStatus {
  id        Int       @id @default(autoincrement())
  name      String    @unique @db.VarChar(50)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  deletedAt DateTime? @db.Timestamp
  orders    Order[]
}

model PaymentMethod {
  id        Int       @id @default(autoincrement())
  name      String    @unique @db.VarChar(50)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  deletedAt DateTime? @db.Timestamp
  orders    Order[]
}

model Order {
  id              Int       @id @default(autoincrement())
  paymentMethodId Int
  paymentStatusId Int
  userId          Int
  description     String    @db.Text
  date            DateTime  @default(now()) @db.Timestamp
  value           Decimal
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now()) @updatedAt
  deletedAt       DateTime? @db.Timestamp

  paymentMethod PaymentMethod @relation(fields: [paymentMethodId], references: [id])
  paymentStatus PaymentStatus @relation(fields: [paymentStatusId], references: [id])
  user          User          @relation(fields: [userId], references: [id])
  orderInfos    OrderInfo[]

  @@index([paymentMethodId])
  @@index([paymentStatusId])
  @@index([userId])
}

model OrderInfo {
  product_id Int
  order_id   Int
  quantity   Int

  product Product @relation(fields: [product_id], references: [id])
  order   Order   @relation(fields: [order_id], references: [id])

  @@id([product_id, order_id])
}
